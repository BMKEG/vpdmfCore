<ViewDefinition Name="containsDiagram" Type="Link">
	<Primitives>
		<PrimitiveDefinition Name="containsDiagram" primaryFlag="TRUE">
			<Classes>
				<Class Name="ViewLinkTable" primaryFlag="TRUE"/>
			</Classes>
			<triplets>
				<triplet>
					ViewLinkTable->from=FromView|ViewTable
				</triplet>
				<triplet>
					ViewLinkTable->to=ToView|ViewTable
				</triplet>
			</triplets>
			<Conditions>
				<Condition>
					|ViewLinkTable.linkType='containsDiagram'
				</Condition>
			</Conditions>
			<FormDesign>
				<Control Type="Lookup" Pos="1" Label="Containing Diagram Element" lookupView="FromView" attributeAddress="]FromView|ViewTable.indexString"/>
				<Control Type="Lookup" Pos="2" Label="Contained Diagram" lookupView="ToView" attributeAddress="]ToView|ViewTable.indexString"/>
			</FormDesign>
		</PrimitiveDefinition>
		<PrimitiveDefinition Name="FromView" Editable="0" lookupView="DiagramElementLU"/>
		<PrimitiveDefinition Name="ToView" Editable="0" lookupView="DiagramLU"/>
	</Primitives>
	<Links>
		<Link Name="DiagramElementContains" setRelation="Overlap">[DiagramElement]DiagramElement|ViewTable=[containsDiagram]FromView|ViewTable</Link>
		<Link Name="ContainedDiagram" setRelation="Overlap">[containsDiagram]ToView|ViewTable=[Diagram]Diagram|ViewTable</Link>
	</Links>
	<IndexElements>
		<IndexElement Pos="1" attributeAddress="]FromView|ViewTable.indexString"/>
		<IndexElement Pos="2" attributeAddress="]ToView|ViewTable.indexString"/>
		<IndexElement Pos="3" attributeAddress="]FromView|ViewTable.ViewTable_id"/>
		<IndexElement Pos="4" attributeAddress="]ToView|ViewTable.ViewTable_id"/>
	</IndexElements>
	<Index Format="$1$ >>> containsDiagram >>> $2$"/>
	<MachineIndex Format="ViewTable_id=$3$ >>> containsDiagram >>> ViewTable_id=$4$"/>
</ViewDefinition>
